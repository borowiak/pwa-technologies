#summary Install the product from pwa
#labels Phase-Deploy,Featured

After compiling the product following the instructions of [Compile] there will be a need to create a hadoop cluster to process a large number of arc files. This file has for base the tutorial [http://wiki.apache.org/hadoop/QuickStart], [http://hadoop.apache.org/common/docs/current/cluster_setup.html] and [http://wiki.apache.org/hadoop/GettingStartedWithHadoop].

First you have to grab the files generated by the compile of the hadoop and copy them to your cluster servers.

===Hadoop configuration files===

First you need to configure some files to allow hadoop to run in a distributed way.
You will need to define a server for hadoop master, this server will have the namenode and tasktracker (for more information on hadoop [http://wiki.apache.org/hadoop] and [http://hadoop.apache.org/]).

After knowing what server to use has master define it in the configurations files.
Setup masters at `${HADOOP_HOME}/conf/masters` file:
{{{
master.example.com
}}}
Setup slaves at `${HADOOP_HOME}/conf/slaves` file:
{{{
server1.example.com
server2.example.com
}}}

Edit the file of `${HADOOP_HOME}/conf/hadoop-site.xml`, change the master, the directories path for your system, every option of this file is in `${HADOOP_HOME}/conf/hadoop-default.xml`:
{{{
<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
 <property>
   <name>fs.default.name</name>
   <value>master.example.com:9000</value>
 </property>
 <property>
   <name>mapred.job.tracker</name>
   <value>master.example.com:9001</value>
 </property>
 <property>
   <name>dfs.name.dir</name>
   <value>/hadooptemp/hadoopfs/dfs/namenode</value>
 </property>
 <property>
   <name>dfs.data.dir</name>
   <value>/hadooptemp/hadoopfs/dfs/datanode</value>
 </property>
 <property>
   <name>mapred.system.dir</name>
   <value>/hadooptemp/hadoopfs/mapred/system</value>
 </property>
 <property>
   <name>mapred.local.dir</name>
   <value>/hadooptemp/hadoopfs/mapred/local</value>
 </property>
 <property>
   <name>mapred.child.java.opts</name>
   <value>-Xmx6000m</value>
 </property>
  <property>
     <name>hadoop.tmp.dir</name>
     <value>/hadooptemp/tmp/hadoop-${user.name}</value>
  </property>
</configuration>
}}}

Edit JAVA_HOME variable at `${HADOOP_HOME}/conf/hadoop-env.sh`:
{{{
...
export JAVA_HOME=/usr/java/default
...
}}}

Edit files at master and copy for all other machines.

There is also the need to share the ssh public key from the master server to the other servers:
  # generate ssh key: 
{{{
 ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa
}}}
  # remove pwd request from localhost:
{{{
 cat ~/.ssh/id_dsa.pub >>> ~/.ssh/authorized_keys
}}}
  # test (if no pwd is requested then it is OK):
{{{
 ssh localhost
}}}
  # Put the key in other machines, repeat for every machine in the cluster.
{{{
ssh-copy-id -i ~/.ssh/id_dsa.pub user@server1.example.com
}}}
  # Create directories:
{{{
mkdir /data/hadoopfs/dfs/namenode/
mkdir /data/hadoopfs/dfs/datanode/
mkdir /data/hadoopfs/mapred/system/
mkdir /data/hadoopfs/mapred/local/
}}}
  # Format the HDFS:
{{{
${HADOOP_HOME}/bin/hadoop namenode -format
}}}
*Note:* If format is aborted then remove directories and format it again:
{{{
rm -rf /data/hadoopfs/dfs/namenode/*
rm -rf /data/hadoopfs/dfs/datanode/*
rm -rf /data/hadoopfs/mapred/system/*
rm -rf /data/hadoopfs/mapred/local/*
}}}

===Using hadoop===
  # Start the hadoop daemons in all machines from the hadoop cluster:
{{{
${HADOOP_HOME}/bin/start-all.sh
}}}
  # See if the services started OK:
{{{
NameNode http://master.example.com:50070/
JobTracker http://master.example.com:50030/
}}}
  # Stop the hadoop deamons:
{{{
${HADOOP_HOME}/bin/stop-all.sh
}}}

==Operating system changes==
===Change the limits for the number of open files===
There is a need to change some parameters for the servers. Because the hadoop system opens a large number of files there is a need to add 2 lines to the file `/etc/security/limits.conf`:
{{{
...
hard nofile 65000
soft nofile 30000
...
}}}

===Set the default charset in the machines===
Change variable LANG in file `/etc/sysconfig/i18n`:
{{{
LANG="pt_PT.ISO-8859-1"
SUPPORTED="en_US.iso885915:en_US:en:pt_PT@euro:pt_PT:pt"
SYSFONT="lat0-sun16"
SYSFONTACM="iso15"
}}}