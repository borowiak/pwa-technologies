<?xml version="1.0"?>
<project 
    xmlns:j="jelly:core" 
    xmlns:define="jelly:define" 
    xmlns:doc="doc" 
    xmlns:artifact="artifact" 
    xmlns:util="jelly:util" 
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant">

    <goal name="site:update-sourceforge" description="Update sf.">
        <exec executable="rsync" >
            <arg value="--quiet" />
            <arg value="--archive" />
            <arg value="--rsh=ssh" />
            <arg value="${maven.build.dir}/docs/"/>
            <arg value="${maven.username}@archive-access.sf.net:/home/groups/a/ar/archive-access/htdocs/projects/wera/" />
        </exec>
    </goal>

    <preGoal name="xdoc:jelly-transform">
        <attainGoal name="faq" />
        <attainGoal name="docbook"/>
    </preGoal>

    <goal name="jar:jar" 
        description="Blind out jar:jar -- we don't want a jar made"/>

    <postGoal name="site:generate" >
        <copy todir="${maven.build.dir}/docs/images">
            <fileset dir="${basedir}/src/images" >
                <include name="**/*" />
            </fileset>
        </copy>
    </postGoal>

    <postGoal name="dist:prepare-bin-filesystem">
        <echo>[wera] dist:prepare-bin-filesystem postGoal</echo>
        <!--Make up the arcretriever war file.-->
        <attainGoal name="war" />
        <attainGoal name="docbook" />

        <!--Set filter token used in a few instances below.-->
        <filter token="VERSION" value="${pom.currentVersion}" />
        <copy todir="${maven.build.dir}/webapps" filtering="true">
          <fileset dir="${maven.src.dir}/webapps">
            <exclude name="**/*.gif"/>
            <exclude name="**/*.jpg"/>
            <exclude name="**/*.png"/>
          </fileset>
        </copy>
        <copy todir="${maven.build.dir}/webapps" filtering="false">
          <fileset dir="${maven.src.dir}/webapps">
            <include name="**/*.gif"/>
            <include name="**/*.jpg"/>
            <include name="**/*.png"/>
            <exclude name="**/*.swf"/>
          </fileset>
        </copy>

        <!--Copy webapps into distribution webapps subdir.-->
        <mkdir dir="${maven.dist.bin.assembly.dir}/webapps" />
        <copy todir="${maven.dist.bin.assembly.dir}/webapps">
          <fileset dir="${maven.build.dir}/webapps" >
            <exclude name="arcretriever/**" />
          </fileset>
          <fileset file="${maven.build.dir}/${maven.war.final.name}" />
        </copy>
        <attainGoal name="copy_docbook" />
    </postGoal>

    <goal name="docbook">
    <!--Check that the jimi jars are present.  If not, skip docbook.
     -->
    <j:set var="sDocbookSupportPresent" value="false" />
       <util:available file="${maven.repo.local}/jimi/jars" >
        <j:set var="sDocbookSupportPresent" value="true"/>
       </util:available>
       <j:if test="${sDocbookSupportPresent == 'true'}">
        <attainGoal name="sdocbook:generate-html"/>
        <!--Copy over the images directory-->
        <mkdir dir="${maven.build.dir}/docs/articles/images/" />
        <copy todir="${maven.build.dir}/docs/articles/images/" verbose="true">
          <fileset dir="${maven.src.dir}/articles/images/" />
        </copy>
        <!--<attainGoal name="sdocbook:generate-pdf"/>
         -->
       </j:if>
       <!-- else -->
       <j:if test="${sDocbookSupportPresent != 'true'}">
        <echo
         message="sdocbook SUN jimi jar not present. Skipping docbook build." />
       </j:if>
    </goal>

    <goal name="copy_docbook">
    <!--Copies docbooks under dist docs and under webapps. This goal runs
        after these dirs have been setup.
     -->
    <property name="docbook.assembled"
        value="${maven.build.dir}/docs/articles/" />
    <j:set var="docbookPresent" value="false" />
       <util:available file="${docbook.assembled}" >
        <j:set var="docbookPresent" value="true"/>
       </util:available>
       <j:if test="${docbookPresent == 'true'}">
        <echo message="Copying over docbook" />
        <!--Copy under docs in binary build-->
        <mkdir dir="${maven.dist.bin.assembly.dir}/docs/articles/" />
        <copy todir="${maven.dist.bin.assembly.dir}/docs/articles/" 
            verbose="true">
          <fileset dir="${maven.build.dir}/docs/articles/" />
        </copy>
        <!--Copy under wera webapp-->
        <mkdir dir="${maven.dist.bin.assembly.dir}/webapps/wera/articles/" />
        <copy todir="${maven.dist.bin.assembly.dir}/webapps/wera/articles/" 
            verbose="true">
          <fileset dir="${maven.build.dir}/docs/articles/" />
        </copy>
       </j:if>
    </goal>

</project>
