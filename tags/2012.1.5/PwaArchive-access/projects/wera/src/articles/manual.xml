<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article>
  <title>WERA Manual</title>

  <articleinfo>
    <releaseinfo>$Date: 2006-03-20 14:51:53 +0000 (Mon, 20 Mar 2006) $</releaseinfo>

    <copyright>
      <year>2003, 2004</year>

      <holder>Royal Library in Stockholm</holder>

      <holder>Royal Library in Copenhagen</holder>

      <holder>Helsinki University Library in Finland</holder>

      <holder>National Library of Norway</holder>

      <holder>National and University Library of Iceland</holder>
    </copyright>

    <author>
      <surname>Bang</surname>

      <firstname>Sverre</firstname>
    </author>
  </articleinfo>

  <sect1>
    <title>Overview</title>

    <para>WERA (Web ARchive Access) is a freely available archive viewer
    application that gives an Internet Archive Wayback Machine-like access to
    web archive collections as well as the possibility to do full text search
    and easy navigation between different versions of a web page.</para>

    <para>WERA is based on, and replaces the NwaToolset. It was built using
    PHP and Java and utilizes open standards like the http protocol and XML
    extensively for communication between different parts of the
    system.</para>

    <para>A web archive may consist of a large number of web documents, but
    also several versions of the same web document (i.e. the documents where
    downloaded from the same URL at different points in time). Potential users
    of WERA might be anyone that has a web archive. Examples of such users may
    be:</para>

    <itemizedlist>
      <listitem>
        <para>National Libraries or other organisations collecting parts of
        the internet for long term preservation.</para>
      </listitem>

      <listitem>
        <para>Companies, organisations or private persons keeping a historical
        collection of their own web site and/or intranet.</para>
      </listitem>
    </itemizedlist>

    <para>Note that in the following text a archived file and a web page is
    not necessarily the same thing. What the user experience as one web
    document may consist of several archived files (e.g. a web page which
    comprises the html file and the inline images).</para>

    <para>In order to use WERA for searching, browsing and navigating your
    archived web documents you will, in addition to a web browser with
    javascript enabled, need some additional components. These are:</para>

    <itemizedlist>
      <listitem>
        <para>A Search Engine which holds a full-text index of the archived
        web documents. Currently the Jakarta Nutch/Lucene based NutchWAX
        search engine is supported.</para>
      </listitem>

      <listitem>
        <para>A Document Retriever which serves as the interface between the
        Access module and the web archive. The Document Retriever delivers
        archived files and associated metadata to WERA upon request.</para>
      </listitem>
    </itemizedlist>

    <figure>
      <title>Wera and friends</title>

      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="images/wera_overview.png"
                     format="PNG" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>A key requirement for the web archive is that the web documents
    contents are stored unaltered and that a metadata set consisting of at
    least the original url, timestamp and mime-type of the archived files is
    available.</para>

    <note>
      <para>For more on the workings and architecture of WERA, see the article
      <ulink
      url="http://archive-access.sourceforge.net/projects/wera/articles/what-is-wera.html">What
      is Wera? </ulink>.</para>
    </note>
  </sect1>

  <sect1>
    <title>Using WERA</title>

    <para>WERA provides the user with interfaces for searching, browsing and
    navigating the archived web pages.</para>

    <para>When the user submits a query, WERA uses the search engine to find
    the archived files containing the text(s) satisfying the query. When the
    user asks for a specific URL, WERA will return the archived file with that
    particular URL (e.g. the archived file originally downloaded from the url
    http://www.nb.no/index.html). Before the file is delivered to the user's
    browser a javaScript is inserted in the file so that the inline links and
    references are altered by the browser to point into the archive rather
    than out to the Internet.</para>

    <para>The resulting web page is presented with a timeline at the top and
    the web document below it. The timeline queries the index for all archived
    versions of the web page and displays the timestamps graphically along the
    line.</para>

    <sect2>
      <title>Searching</title>

      <para>Searching a web archive through WERA resembles using a Internet
      search engine like Google. An example of WERA search interface and
      result list is shown in figure 2.<figure>
          <title>Search Result</title>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/searchresult.png" />
            </imageobject>
          </mediaobject>
        </figure></para>

      <para>The results are grouped by site. To view the results from a
      specific site click the link <emphasis>More from this site</emphasis>.
      The resulting output is shown in figure 3.</para>

      <para>To display all hits (no grouping) click the link <emphasis>Show
      All</emphasis> (bottom, left - figure 2). The resulting output is shown
      in figure 4.</para>

      <para><figure>
          <title>Search Result - More from this site</title>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/searchresult_morefromsite.png" />
            </imageobject>
          </mediaobject>
        </figure></para>

      <para><figure>
          <title>Search Result - Show all</title>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/searchresult_showall.png" />
            </imageobject>
          </mediaobject>
        </figure></para>

      <para>Please note that in both <emphasis>Show all</emphasis> and
      <emphasis>More from this site</emphasis> the different versions of a
      given URL is shown as one hit.</para>

      <para>Clicking the Timeline link in the Search result page will take the
      user to the Timeline page with the most recent versions
      displayed.</para>

      <para>Clicking the Overview link of a specific hit will display all the
      dates for the versions found for the chosen URL (the overview does not
      contain any information of which versions that actually satisfied the
      query term given in the first place).</para>

      <figure>
        <title>Overview</title>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/overview.png" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>Clicking one of the links in the Overview page will take the user
      to the Timeline view with the chosen version displayed.</para>
    </sect2>

    <sect2>
      <title>Navigating</title>

      <figure>
        <title>Timeline</title>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/timeline.png" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>When navigating from the Overview or the result list of a search
      interface, the URL of the chosen version is passed along and shown in
      the URL field. A URL may also be entered manually.</para>

      <para>Navigation between the different versions is done by directly
      clicking a specific point on the timeline, or by using the arrows first,
      previous, next and last.</para>

      <para>When entering the timeline view the resolution is set to auto.
      This means that the timeline automatically drills down to the resolution
      needed to display single versions along the line. The
      <emphasis>Auto</emphasis> checkbox may be unchecked in order to manually
      choose the resolution (choosing a different resolution when in auto also
      disables auto resolution).</para>

      <para>Checking the <emphasis>Metadata</emphasis> checkbox of the
      timeline will bring up metadata for the chosen URL/Time in the lower
      part of the timeline view (see figure below).</para>

      <para><figure>
          <title>Timeline - Metadata Viewer</title>

          <mediaobject>
            <imageobject>
              <imagedata fileref="images/timeline_meta.png" />
            </imageobject>
          </mediaobject>
        </figure>It is also possible to perform a search from the Timeline
      view by typing in a query term and pressing
      <emphasis>Go</emphasis>.</para>
    </sect2>
  </sect1>

  <sect1>
    <title>Installation</title>

    <sect2>
      <title>Obtaining WERA</title>

      <para>The latest version of WERA may be downloaded from the
      archive-access <ulink
      url="http://sourceforge.net/project/showfiles.php?group_id=118427">files
      pages</ulink> at sourceforge.</para>
    </sect2>

    <sect2>
      <title>System Requirements</title>

      <para>WERA has been tested on different builds of
      <emphasis>RedHat</emphasis>, <emphasis>Fedora</emphasis> and
      <emphasis>Suse</emphasis> Linux. There is no reason to believe that the
      system will not work on other linux/unix ditributions.</para>

      <itemizedlist>
        <listitem>
          <para>A JVM</para>
        </listitem>

        <listitem>
          <para>Apache http server w. PHP 4.3 or 4.4 (make sure that XML
          support is enabled, see below for details). WERA will NOT work
          properly with PHP 5, because of the new Object Model in PHP5.</para>

          <para>If PHP not installed, the quickest solution may be to install
          <ulink
          url="http://www.apachefriends.org/en/xampp.html">XAMPP</ulink>,
          which also has XML support enabled.</para>

          <para><emphasis role="bold">PHP XML support:</emphasis></para>

          <para>XML support is needed by WERA to handle the search results
          returned from the NutchWAX search engine. To verify that XML support
          is enabled in php simply store the following text in a php-file
          (e.g. info.php) and save it in the apache DocumentRoot
          directory:</para>

          <para><userinput>&lt;?php phpinfo(); ?&gt;</userinput></para>

          <para>Open up
          <userinput>http://&lt;yourhost&gt;/info.php</userinput> in a browser
          and check that PHP has <emphasis role="bold">not</emphasis> been
          compiled with --disable-xml</para>
        </listitem>

        <listitem>
          <para>Tomcat servlet container
          (http://jakarta.apache.org/tomcat/index.html). The arcretriever web
          app has been tested on v.5.0.27 and 5.0.28 as well as in
          5.5.9.</para>
        </listitem>

        <listitem>
          <para><ulink
          url="http://archive-access.sourceforge.net/projects/nutch/">NutchWAX</ulink>.
          A bundling of Nutch and extensions for searching search Web Archive
          Collections (WACs) For how to install NutchWAX, see <ulink
          url="http://archive-access.sourceforge.net/projects/nutch/gettingstarted.html">NutchWAX
          Getting Started</ulink>. <note>
              <para>When indexing, make sure you invoke the NutchWAX indexer
              (indexarcs.sh) with the <emphasis>-n</emphasis> option. If not,
              nutchWAX will remove all duplicate urls from the index. Using
              WERA against such an index will give only one version per url on
              the WERA timeline.</para>
            </note></para>
        </listitem>
      </itemizedlist>

      <para>WERA has been tested on different builds of
      <emphasis>RedHat</emphasis>, <emphasis>Fedora</emphasis> and
      <emphasis>Suse</emphasis> Linux. There is no reason to believe that the
      system will not work on other linux/unix ditributions.</para>
    </sect2>

    <sect2>
      <title>Installing WERA using installer</title>

      <para>The java based installer will install and configure the wera php
      webapp and arcretriever application.</para>

      <itemizedlist>
        <listitem>
          <para>Download wera-x-y-z-installer.tar.gz from sourceforge.</para>
        </listitem>

        <listitem>
          <para>Unpack the gzipped tarball in a temporary directory on the
          host where you want wera installed.</para>
        </listitem>

        <listitem>
          <para>Invoke the installer using <userinput>java -jar
          wera-x-y-z-installer.jar</userinput>.</para>
        </listitem>

        <listitem>
          <para>Follow the on-screen instructions.</para>
        </listitem>
      </itemizedlist>

      <para>The installer will confgure WERA (and the arcretriever) in
      accordance with the input provided by you during the installation
      process. See the section on manual installation in order to view and
      change these settings manually (E.g if NutchWAX and/or your ARC file
      collection reside on different hosts than WERA.).</para>

      <para>If the machine you are installing on does not have X installed, or
      if you are invoking the installer over ssh and X port forwarding is not
      working properly the installer should fall back to text mode. If this
      fails, try using the manual install preocedure described in the
      following section.</para>
    </sect2>

    <sect2>
      <title>Installing WERA manually</title>

      <para>To install WERA manually do the following:</para>

      <itemizedlist>
        <listitem>
          <para>Download wera-x-y-z.tar.gz from sourceforge. Untar and gunzip
          the bundle. Let the resultant directory be WERA_HOME (e.g.
          wera-x-y-z).</para>
        </listitem>

        <listitem>
          <para>Move <filename>$WERA_HOME/webapps/wera</filename> into the
          Apache document root directory -- HTDOCS -- on the host where you
          want the WERA application to run.</para>
        </listitem>

        <listitem>
          <para>Move the file arcretriever.war from
          <filename>$WERA_HOME/webapps/wera</filename> to the webapps
          directory of the tomcat installation of the host where your
          ARC-files reside (i.e. $TOMCAT_HOME/webapps).</para>

          <para>You must next configure the arcretreiver telling it where the
          directory of ARCs that it is to retrieve from resides. The
          configuration is inside in the WEB-INF/web.xml file. Dependent on
          your tomcat configuration, usually, tomcat will unjar the
          arcretriever.war file once the webapp has been deployed. If so,
          shutdown tomcat, remove arcretriever.war, leaving the arcretreiver
          directory in place, edit the arcretriever/WEB-INF/web.xml file
          setting full path to the arcdir and then restart tomcat. If tomcat
          does not undo your WAR file, you'll have to do it yourself. Move the
          WAR file out from under tomcat. Use the java jar command to undo the
          WAR. <programlisting>    % cd /tmp
    % mkdir arcretriever
    % cd arcretriever
    % cp $WERA_HOME/webapps/arcretriever.war arcretriever
    % $JAVA_HOME/bin/jar xf arcretriever.war
    % rm arcretriever.war 
    (EDIT arcretriever/WEB-INF/web.xml. Set 'arcdir' param-value to full path to arcs.)
    % cd ../
    % mv arcretriever $TOMCAT_HOME/webapps
    % %TOMCAT_HOME/bin/shutdown.sh
    % %TOMCAT_HOME/bin/startup.sh
    </programlisting></para>
        </listitem>

        <listitem>
          <para>Edit the file <filename>HTDOCS/wera/lib/config.inc</filename>
          (see <emphasis>settings</emphasis> chapter for details).</para>
        </listitem>
      </itemizedlist>
    </sect2>

    <sect2>
      <title>Configuring</title>

      <para>Settings for WERA can be found in the file
      <filename>HTDOCS/wera/lib/config.inc</filename>. Edit this file in order
      to configure WERA for your environment. Parameters to adapt:</para>

      <table>
        <title>Settings in config.inc</title>

        <tgroup cols="2">
          <tbody>
            <row valign="top">
              <entry>$conf_debug</entry>

              <entry><para>In order to have WERA produce some debug output,
              set to 1</para><para>In the <emphasis>Search</emphasis> and
              <emphasis>Overview</emphasis> pages the query request to
              NutchWax and the result set returned will be
              displayed.</para><para>In the <emphasis>Timeline</emphasis> view
              the the timeline datas is printed as html comment (view source
              to see).</para></entry>
            </row>

            <row valign="top">
              <entry>$conf_rootpath = "/opt/lampp/htdocs/wera";</entry>

              <entry>Change this so that it corresponds with your environment
              i.e. <filename>HTDOCS/wera</filename> (you may of course rename
              the extracted wera directory to something else, and even choose
              to place it further down in the directory structure)</entry>
            </row>

            <row valign="top">
              <entry>$conf_searchengine_url =
              "http://localhost:8080/nutchwax/opensearch";</entry>

              <entry>Open the url
              http://&lt;nutchwaxhost&gt;:&lt;port&gt;/nutchwax/ and click the
              RSS icon. The url of this page is the url you want to enter as
              conf_searchine_url (do not include the query part i.e. the ? and
              everything preceding it). If nutchwax is installed on the same
              host as you installed WERA on and tomcat is serving on port
              8080, the default setting should work.</entry>
            </row>

            <row valign="top">
              <entry>$document_retriever =
              "http://localhost:8080/arcretriever/arcretriever";</entry>

              <entry>Change the host name and port to point the tomcat
              installation of the host where your ARC-files reside.</entry>
            </row>

            <row valign="top">
              <entry>$conf_http_host = "http://localhost/wera";</entry>

              <entry>Change <emphasis>localhost</emphasis> to the host name of
              the machine where you are installing WERA. Add the port number
              if different from 80 (&lt;hostname&gt;:&lt;port&gt;). If you
              renamed the wera directory or unpacked it further down relative
              to HTDOCS, update this parameter accordingly.</entry>
            </row>

            <row valign="top">
              <entry valign="top">$conf_url_canonize_rules_immediate =
              "removefragment|userinfo|sessionids|querystrprefix";
              $conf_url_canonize_rules_try =
              "addwww|lowercase|stripwww";</entry>

              <entry><para>URI canonicalization rules</para><para>Change these
              according to the canonicalization rules used during harvesting.
              The rules may be applied immediately, i.e. before the initial
              exacturl query, or as try-rules. In this case the rule is
              applied to the URL and the exacturl query is repeated. If the
              query does not return a valid result, the next try-rule is
              applied and query repeated until the rule-list is expired. The
              following rules are implemented:</para><itemizedlist>
                  <listitem>
                    <para>lowercase - If uppercase characters in url,
                    lowercase the url</para>
                  </listitem>

                  <listitem>
                    <para>stripindex - Strip trailing index.* from url</para>
                  </listitem>

                  <listitem>
                    <para>userinfo - Strip userinfo from url (e.g
                    http://user:pass@nwa.nb.no/ becomes
                    http://nwa.nb.no/</para>
                  </listitem>

                  <listitem>
                    <para>addwww - If no 'www.' as first part of host and no
                    hits, insert 'www.'</para>
                  </listitem>

                  <listitem>
                    <para>addwwwaddslash - Same as addwww but combines
                    addslash</para>
                  </listitem>

                  <listitem>
                    <para>stripwww - If 'www.' as first part of host and no
                    hits, strip 'www.'</para>
                  </listitem>

                  <listitem>
                    <para>stripwwwaddslash - Same as stripwww but combines
                    addslash</para>
                  </listitem>

                  <listitem>
                    <para>querystrprefix - Fix up the question mark that leads
                    off the query string</para>
                  </listitem>

                  <listitem>
                    <para>sessionids - If any known session id's present in
                    url, strip out the session id's. Removes JSESSIONID,
                    ASPSESSIONID, PHPSESSID, and sid session ids.</para>
                  </listitem>

                  <listitem>
                    <para>removefragment - Removes fragment identifiers used
                    to link to anchor within a page. Currently Wera does not
                    support fragment ids, so this should always be enabled
                    (rules_immediate).</para>
                  </listitem>

                  <listitem>
                    <para>addslash - Add trailing slash to the url (if not
                    already present).</para>
                  </listitem>
                </itemizedlist><para>Please note that every try rule
              potentially adds one extra query request to the search
              engine.</para><para>The addwww and stripwww rules are mutually
              exclusive (if one is applied, the other is not). The
              addwwwaddslash and stripwwwaddslash are also mutually
              exclusive.</para><para>The rules are applied in the order
              specified in the config. To remove a rule, simply delete it from
              the $conf_url_canonize_rules_*. To disable all rules simply
              replace the list with an empty string e.g.
              $conf_url_canonize_rules_try = "". If you suspect that a
              specific immediate rule doesn't fit your archive, consider
              deleting it or moving it the the try-rule list.</para></entry>
            </row>

            <row valign="top">
              <entry>$conf_url_canonize_debug_on</entry>

              <entry>If set to true, the rules applied will be displayed below
              the timeline when no version found, and when the metadata viewer
              is enabled.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>There are other parameters to tweak as well, but for a simple
      setup of WERA the above settings should do. Information on setting other
      parameters and how to distribute the different components of WERA on
      different hosts will be provided in a later release.</para>
    </sect2>

    <sect2>
      <title>Proxy support (EXPERIMENTAL)</title>

      <para>The Javascript inserted by WERA before the html page is delivered
      to the users browser does not catch all links. To prevent this undesired
      behaviour the web server hosting WERA can be set up as Proxy server so
      that all the requests for other hosts than the WERA host can be
      redirected back to WERA. Of course, the user will have to change the
      browsers proxy setting so that all requests goes to the WERA
      host.</para>

      <para>To enable this functionality for an XAMPP Apache installation save
      the text below in the file
      <filename>&lt;$APACHE_INSTALLDIR&gt;/etc/extra/httpd-wera.conf</filename>
      and add the line <userinput>Include
      etc/extra/httpd-wera.conf</userinput> to the Apache configuration file
      (httpd.conf). Make sure you change the hostname in httpd-wera.conf from
      example.com to the hostname of your server.</para>

      <screen># WERA Proxy test (experimental)
ProxyRequests On
ProxyVia On
&lt;Proxy *&gt;
Order deny,allow
Allow from all
&lt;/Proxy&gt;

RewriteEngine on
#RewriteLog logs/rewrite_log
#RewriteLogLevel 9

RewriteCond   %{HTTP_HOST}    !^(example\.com) 
RewriteRule   (.*)            http://example.com/wera/urlProxyRedirect.php?url=$1</screen>
    </sect2>
  </sect1>

  <sect1>
    <title>Troubleshooting</title>

    <sect2>
      <title>Testing the Retriever</title>

      <para>In order to test the Retriever try accessing the following urls in
      a browser (or use <command>wget [URL]</command> from the command
      line):</para>

      <itemizedlist>
        <listitem>
          <para>http://&lt;hostname&gt;.&lt;domainname&gt;[:port]/&lt;retriever&gt;?reqtype=&lt;reqtype&gt;&amp;aid=&lt;aid&gt;</para>
        </listitem>
      </itemizedlist>

      <para>Where <emphasis>retriever</emphasis> is the retriever script doing
      the retrieval, <emphasis>reqtype</emphasis> is the request type and the
      <emphasis>aid</emphasis> is the unique identifier (within the archive)
      for a harvested file. The <emphasis>getmeta</emphasis> request will
      return archived technical metadata for the file in question and the
      <emphasis>getfile</emphasis> request will return the archived file
      itself.</para>

      <para>To find the <emphasis>aid</emphasis> of one partcular document in
      your archive open the url
      http://&lt;nutchwaxhost&gt;:&lt;port&gt;/nutchwax/ and enter execute a
      query. Scroll down to the RSS icon and click it. For one particular
      result copy the value of nutch:arcoffset and nutch:arcname and build the
      aid: &lt;arcoffset&gt;/&lt;arcname&gt;&lt;conf_aid_suffix&gt;</para>

      <para>An example of the result of the getmeta request
      http://localhost:8080/arcretriever/arcretriever?aid=5160509/IAH-20041102080031-00007-test1.nb.no.arc.gz&amp;reqtype=getmeta
      is given below.</para>

      <screen format="linespecific">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
  &lt;retrievermessage&gt;
  &lt;head&gt;
  &lt;reqtype&gt;getmeta&lt;/reqtype&gt;
  &lt;aid&gt;5160509/IAH-20041102080031-00007-test1.nb.no.arc.gz&lt;/aid&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;metadata&gt;
      &lt;url&gt;http://www.nla.gov.au/raam/&lt;/url&gt;
      &lt;archival_time&gt;20041102080756&lt;/archival_time&gt;
      &lt;last_modified_time&gt;20041102080756&lt;/last_modified_time&gt;
      &lt;content_length&gt;&lt;/content_length&gt;
      &lt;contenttype&gt;
        &lt;type&gt;text/html&lt;/type&gt;
        &lt;charset&gt;&lt;/charset&gt;
      &lt;/contenttype&gt;
      &lt;filestatus&gt;online&lt;/filestatus&gt;
      &lt;filestatus_long&gt;&lt;/filestatus_long&gt;
      &lt;content_checksum&gt;ZBYZIFD6PK5ZHCUQGTKZSZ2LJMZUD554&lt;/content_checksum&gt;
      &lt;http-header&gt;HTTP/1.1 200 OK
       Date: Tue, 02 Nov 2004 08:07:57 GMT
       Server: Apache/1.3.29 (Unix) PHP/4.1.2 mod_perl/1.27 mod_jk/1.2.0 mod_ssl/2.8.16 OpenSSL/0.9.6l
       X-Powered-By: PHP/4.1.2
       Connection: close
       Content-Type: text/html&lt;/http-header&gt;
    &lt;/metadata&gt;
  &lt;/body&gt;
&lt;/retrievermessage&gt;</screen>

      <para>To retrieve the actual archived resource (in this case
      http://www.nla.gov.au/raam/) from the arcretriever change
      <emphasis>getmeta</emphasis> to <emphasis>getfile</emphasis> in the
      request described above.</para>
    </sect2>
  </sect1>
</article>